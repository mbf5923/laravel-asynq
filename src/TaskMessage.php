<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: src/proto/asynq.proto

namespace Wuwuseo\HibikenAsynqClient;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * TaskMessage is the internal representation of a task with additional
 * metadata fields.
 * Next ID: 15
 *
 * Generated from protobuf message <code>asynq.TaskMessage</code>
 */
class TaskMessage extends \Google\Protobuf\Internal\Message
{
    /**
     * Type indicates the kind of the task to be performed.
     *
     * Generated from protobuf field <code>string type = 1;</code>
     */
    protected $type = '';
    /**
     * Payload holds data needed to process the task.
     *
     * Generated from protobuf field <code>bytes payload = 2;</code>
     */
    protected $payload = '';
    /**
     * Unique identifier for the task.
     *
     * Generated from protobuf field <code>string id = 3;</code>
     */
    protected $id = '';
    /**
     * Name of the queue to which this task belongs.
     *
     * Generated from protobuf field <code>string queue = 4;</code>
     */
    protected $queue = '';
    /**
     * Max number of retries for this task.
     *
     * Generated from protobuf field <code>int32 retry = 5;</code>
     */
    protected $retry = 0;
    /**
     * Number of times this task has been retried so far.
     *
     * Generated from protobuf field <code>int32 retried = 6;</code>
     */
    protected $retried = 0;
    /**
     * Error message from the last failure.
     *
     * Generated from protobuf field <code>string error_msg = 7;</code>
     */
    protected $error_msg = '';
    /**
     * Time of last failure in Unix time,
     * the number of seconds elapsed since January 1, 1970 UTC.
     * Use zero to indicate no last failure.
     *
     * Generated from protobuf field <code>int64 last_failed_at = 11;</code>
     */
    protected $last_failed_at = 0;
    /**
     * Timeout specifies timeout in seconds.
     * Use zero to indicate no timeout.
     *
     * Generated from protobuf field <code>int64 timeout = 8;</code>
     */
    protected $timeout = 0;
    /**
     * Deadline specifies the deadline for the task in Unix time,
     * the number of seconds elapsed since January 1, 1970 UTC.
     * Use zero to indicate no deadline.
     *
     * Generated from protobuf field <code>int64 deadline = 9;</code>
     */
    protected $deadline = 0;
    /**
     * UniqueKey holds the redis key used for uniqueness lock for this task.
     * Empty string indicates that no uniqueness lock was used.
     *
     * Generated from protobuf field <code>string unique_key = 10;</code>
     */
    protected $unique_key = '';
    /**
     * GroupKey is a name of the group used for task aggregation.
     * This field is optional and empty value means no aggregation for the task.
     *
     * Generated from protobuf field <code>string group_key = 14;</code>
     */
    protected $group_key = '';
    /**
     * Retention period specified in a number of seconds.
     * The task will be stored in redis as a completed task until the TTL
     * expires.
     *
     * Generated from protobuf field <code>int64 retention = 12;</code>
     */
    protected $retention = 0;
    /**
     * Time when the task completed in success in Unix time,
     * the number of seconds elapsed since January 1, 1970 UTC.
     * This field is populated if result_ttl > 0 upon completion.
     *
     * Generated from protobuf field <code>int64 completed_at = 13;</code>
     */
    protected $completed_at = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $type
     *           Type indicates the kind of the task to be performed.
     *     @type string $payload
     *           Payload holds data needed to process the task.
     *     @type string $id
     *           Unique identifier for the task.
     *     @type string $queue
     *           Name of the queue to which this task belongs.
     *     @type int $retry
     *           Max number of retries for this task.
     *     @type int $retried
     *           Number of times this task has been retried so far.
     *     @type string $error_msg
     *           Error message from the last failure.
     *     @type int|string $last_failed_at
     *           Time of last failure in Unix time,
     *           the number of seconds elapsed since January 1, 1970 UTC.
     *           Use zero to indicate no last failure.
     *     @type int|string $timeout
     *           Timeout specifies timeout in seconds.
     *           Use zero to indicate no timeout.
     *     @type int|string $deadline
     *           Deadline specifies the deadline for the task in Unix time,
     *           the number of seconds elapsed since January 1, 1970 UTC.
     *           Use zero to indicate no deadline.
     *     @type string $unique_key
     *           UniqueKey holds the redis key used for uniqueness lock for this task.
     *           Empty string indicates that no uniqueness lock was used.
     *     @type string $group_key
     *           GroupKey is a name of the group used for task aggregation.
     *           This field is optional and empty value means no aggregation for the task.
     *     @type int|string $retention
     *           Retention period specified in a number of seconds.
     *           The task will be stored in redis as a completed task until the TTL
     *           expires.
     *     @type int|string $completed_at
     *           Time when the task completed in success in Unix time,
     *           the number of seconds elapsed since January 1, 1970 UTC.
     *           This field is populated if result_ttl > 0 upon completion.
     * }
     */
    public function __construct($data = NULL) {
        \Wuwuseo\HibikenAsynqClient\metadata\Asynq::initOnce();
        parent::__construct($data);
    }

    /**
     * Type indicates the kind of the task to be performed.
     *
     * Generated from protobuf field <code>string type = 1;</code>
     * @return string
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Type indicates the kind of the task to be performed.
     *
     * Generated from protobuf field <code>string type = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkString($var, True);
        $this->type = $var;

        return $this;
    }

    /**
     * Payload holds data needed to process the task.
     *
     * Generated from protobuf field <code>bytes payload = 2;</code>
     * @return string
     */
    public function getPayload()
    {
        return $this->payload;
    }

    /**
     * Payload holds data needed to process the task.
     *
     * Generated from protobuf field <code>bytes payload = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setPayload($var)
    {
        GPBUtil::checkString($var, False);
        $this->payload = $var;

        return $this;
    }

    /**
     * Unique identifier for the task.
     *
     * Generated from protobuf field <code>string id = 3;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Unique identifier for the task.
     *
     * Generated from protobuf field <code>string id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * Name of the queue to which this task belongs.
     *
     * Generated from protobuf field <code>string queue = 4;</code>
     * @return string
     */
    public function getQueue()
    {
        return $this->queue;
    }

    /**
     * Name of the queue to which this task belongs.
     *
     * Generated from protobuf field <code>string queue = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setQueue($var)
    {
        GPBUtil::checkString($var, True);
        $this->queue = $var;

        return $this;
    }

    /**
     * Max number of retries for this task.
     *
     * Generated from protobuf field <code>int32 retry = 5;</code>
     * @return int
     */
    public function getRetry()
    {
        return $this->retry;
    }

    /**
     * Max number of retries for this task.
     *
     * Generated from protobuf field <code>int32 retry = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setRetry($var)
    {
        GPBUtil::checkInt32($var);
        $this->retry = $var;

        return $this;
    }

    /**
     * Number of times this task has been retried so far.
     *
     * Generated from protobuf field <code>int32 retried = 6;</code>
     * @return int
     */
    public function getRetried()
    {
        return $this->retried;
    }

    /**
     * Number of times this task has been retried so far.
     *
     * Generated from protobuf field <code>int32 retried = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setRetried($var)
    {
        GPBUtil::checkInt32($var);
        $this->retried = $var;

        return $this;
    }

    /**
     * Error message from the last failure.
     *
     * Generated from protobuf field <code>string error_msg = 7;</code>
     * @return string
     */
    public function getErrorMsg()
    {
        return $this->error_msg;
    }

    /**
     * Error message from the last failure.
     *
     * Generated from protobuf field <code>string error_msg = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setErrorMsg($var)
    {
        GPBUtil::checkString($var, True);
        $this->error_msg = $var;

        return $this;
    }

    /**
     * Time of last failure in Unix time,
     * the number of seconds elapsed since January 1, 1970 UTC.
     * Use zero to indicate no last failure.
     *
     * Generated from protobuf field <code>int64 last_failed_at = 11;</code>
     * @return int|string
     */
    public function getLastFailedAt()
    {
        return $this->last_failed_at;
    }

    /**
     * Time of last failure in Unix time,
     * the number of seconds elapsed since January 1, 1970 UTC.
     * Use zero to indicate no last failure.
     *
     * Generated from protobuf field <code>int64 last_failed_at = 11;</code>
     * @param int|string $var
     * @return $this
     */
    public function setLastFailedAt($var)
    {
        GPBUtil::checkInt64($var);
        $this->last_failed_at = $var;

        return $this;
    }

    /**
     * Timeout specifies timeout in seconds.
     * Use zero to indicate no timeout.
     *
     * Generated from protobuf field <code>int64 timeout = 8;</code>
     * @return int|string
     */
    public function getTimeout()
    {
        return $this->timeout;
    }

    /**
     * Timeout specifies timeout in seconds.
     * Use zero to indicate no timeout.
     *
     * Generated from protobuf field <code>int64 timeout = 8;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTimeout($var)
    {
        GPBUtil::checkInt64($var);
        $this->timeout = $var;

        return $this;
    }

    /**
     * Deadline specifies the deadline for the task in Unix time,
     * the number of seconds elapsed since January 1, 1970 UTC.
     * Use zero to indicate no deadline.
     *
     * Generated from protobuf field <code>int64 deadline = 9;</code>
     * @return int|string
     */
    public function getDeadline()
    {
        return $this->deadline;
    }

    /**
     * Deadline specifies the deadline for the task in Unix time,
     * the number of seconds elapsed since January 1, 1970 UTC.
     * Use zero to indicate no deadline.
     *
     * Generated from protobuf field <code>int64 deadline = 9;</code>
     * @param int|string $var
     * @return $this
     */
    public function setDeadline($var)
    {
        GPBUtil::checkInt64($var);
        $this->deadline = $var;

        return $this;
    }

    /**
     * UniqueKey holds the redis key used for uniqueness lock for this task.
     * Empty string indicates that no uniqueness lock was used.
     *
     * Generated from protobuf field <code>string unique_key = 10;</code>
     * @return string
     */
    public function getUniqueKey()
    {
        return $this->unique_key;
    }

    /**
     * UniqueKey holds the redis key used for uniqueness lock for this task.
     * Empty string indicates that no uniqueness lock was used.
     *
     * Generated from protobuf field <code>string unique_key = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setUniqueKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->unique_key = $var;

        return $this;
    }

    /**
     * GroupKey is a name of the group used for task aggregation.
     * This field is optional and empty value means no aggregation for the task.
     *
     * Generated from protobuf field <code>string group_key = 14;</code>
     * @return string
     */
    public function getGroupKey()
    {
        return $this->group_key;
    }

    /**
     * GroupKey is a name of the group used for task aggregation.
     * This field is optional and empty value means no aggregation for the task.
     *
     * Generated from protobuf field <code>string group_key = 14;</code>
     * @param string $var
     * @return $this
     */
    public function setGroupKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->group_key = $var;

        return $this;
    }

    /**
     * Retention period specified in a number of seconds.
     * The task will be stored in redis as a completed task until the TTL
     * expires.
     *
     * Generated from protobuf field <code>int64 retention = 12;</code>
     * @return int|string
     */
    public function getRetention()
    {
        return $this->retention;
    }

    /**
     * Retention period specified in a number of seconds.
     * The task will be stored in redis as a completed task until the TTL
     * expires.
     *
     * Generated from protobuf field <code>int64 retention = 12;</code>
     * @param int|string $var
     * @return $this
     */
    public function setRetention($var)
    {
        GPBUtil::checkInt64($var);
        $this->retention = $var;

        return $this;
    }

    /**
     * Time when the task completed in success in Unix time,
     * the number of seconds elapsed since January 1, 1970 UTC.
     * This field is populated if result_ttl > 0 upon completion.
     *
     * Generated from protobuf field <code>int64 completed_at = 13;</code>
     * @return int|string
     */
    public function getCompletedAt()
    {
        return $this->completed_at;
    }

    /**
     * Time when the task completed in success in Unix time,
     * the number of seconds elapsed since January 1, 1970 UTC.
     * This field is populated if result_ttl > 0 upon completion.
     *
     * Generated from protobuf field <code>int64 completed_at = 13;</code>
     * @param int|string $var
     * @return $this
     */
    public function setCompletedAt($var)
    {
        GPBUtil::checkInt64($var);
        $this->completed_at = $var;

        return $this;
    }

}

