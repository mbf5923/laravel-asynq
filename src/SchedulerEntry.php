<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: src/proto/asynq.proto

namespace Wuwuseo\HibikenAsynqClient;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * SchedulerEntry holds information about a periodic task registered 
 * with a scheduler.
 *
 * Generated from protobuf message <code>asynq.SchedulerEntry</code>
 */
class SchedulerEntry extends \Google\Protobuf\Internal\Message
{
    /**
     * Identifier of the scheduler entry.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    /**
     * Periodic schedule spec of the entry.
     *
     * Generated from protobuf field <code>string spec = 2;</code>
     */
    protected $spec = '';
    /**
     * Task type of the periodic task.
     *
     * Generated from protobuf field <code>string task_type = 3;</code>
     */
    protected $task_type = '';
    /**
     * Task payload of the periodic task.
     *
     * Generated from protobuf field <code>bytes task_payload = 4;</code>
     */
    protected $task_payload = '';
    /**
     * Options used to enqueue the periodic task.
     *
     * Generated from protobuf field <code>repeated string enqueue_options = 5;</code>
     */
    private $enqueue_options;
    /**
     * Next time the task will be enqueued.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp next_enqueue_time = 6;</code>
     */
    protected $next_enqueue_time = null;
    /**
     * Last time the task was enqueued.
     * Zero time if task was never enqueued.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp prev_enqueue_time = 7;</code>
     */
    protected $prev_enqueue_time = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           Identifier of the scheduler entry.
     *     @type string $spec
     *           Periodic schedule spec of the entry.
     *     @type string $task_type
     *           Task type of the periodic task.
     *     @type string $task_payload
     *           Task payload of the periodic task.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $enqueue_options
     *           Options used to enqueue the periodic task.
     *     @type \Google\Protobuf\Timestamp $next_enqueue_time
     *           Next time the task will be enqueued.
     *     @type \Google\Protobuf\Timestamp $prev_enqueue_time
     *           Last time the task was enqueued.
     *           Zero time if task was never enqueued.
     * }
     */
    public function __construct($data = NULL) {
        \Wuwuseo\HibikenAsynqClient\metadata\Asynq::initOnce();
        parent::__construct($data);
    }

    /**
     * Identifier of the scheduler entry.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Identifier of the scheduler entry.
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * Periodic schedule spec of the entry.
     *
     * Generated from protobuf field <code>string spec = 2;</code>
     * @return string
     */
    public function getSpec()
    {
        return $this->spec;
    }

    /**
     * Periodic schedule spec of the entry.
     *
     * Generated from protobuf field <code>string spec = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setSpec($var)
    {
        GPBUtil::checkString($var, True);
        $this->spec = $var;

        return $this;
    }

    /**
     * Task type of the periodic task.
     *
     * Generated from protobuf field <code>string task_type = 3;</code>
     * @return string
     */
    public function getTaskType()
    {
        return $this->task_type;
    }

    /**
     * Task type of the periodic task.
     *
     * Generated from protobuf field <code>string task_type = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setTaskType($var)
    {
        GPBUtil::checkString($var, True);
        $this->task_type = $var;

        return $this;
    }

    /**
     * Task payload of the periodic task.
     *
     * Generated from protobuf field <code>bytes task_payload = 4;</code>
     * @return string
     */
    public function getTaskPayload()
    {
        return $this->task_payload;
    }

    /**
     * Task payload of the periodic task.
     *
     * Generated from protobuf field <code>bytes task_payload = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setTaskPayload($var)
    {
        GPBUtil::checkString($var, False);
        $this->task_payload = $var;

        return $this;
    }

    /**
     * Options used to enqueue the periodic task.
     *
     * Generated from protobuf field <code>repeated string enqueue_options = 5;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getEnqueueOptions()
    {
        return $this->enqueue_options;
    }

    /**
     * Options used to enqueue the periodic task.
     *
     * Generated from protobuf field <code>repeated string enqueue_options = 5;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setEnqueueOptions($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->enqueue_options = $arr;

        return $this;
    }

    /**
     * Next time the task will be enqueued.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp next_enqueue_time = 6;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getNextEnqueueTime()
    {
        return $this->next_enqueue_time;
    }

    public function hasNextEnqueueTime()
    {
        return isset($this->next_enqueue_time);
    }

    public function clearNextEnqueueTime()
    {
        unset($this->next_enqueue_time);
    }

    /**
     * Next time the task will be enqueued.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp next_enqueue_time = 6;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setNextEnqueueTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->next_enqueue_time = $var;

        return $this;
    }

    /**
     * Last time the task was enqueued.
     * Zero time if task was never enqueued.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp prev_enqueue_time = 7;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getPrevEnqueueTime()
    {
        return $this->prev_enqueue_time;
    }

    public function hasPrevEnqueueTime()
    {
        return isset($this->prev_enqueue_time);
    }

    public function clearPrevEnqueueTime()
    {
        unset($this->prev_enqueue_time);
    }

    /**
     * Last time the task was enqueued.
     * Zero time if task was never enqueued.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp prev_enqueue_time = 7;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setPrevEnqueueTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->prev_enqueue_time = $var;

        return $this;
    }

}

